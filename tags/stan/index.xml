<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stan on p( ssp3nc3r | Columbian )</title>
    <link>https://ssp3nc3r.github.io/tags/stan/</link>
    <description>Recent content in Stan on p( ssp3nc3r | Columbian )</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Oct 2024 23:54:42 -0400</lastBuildDate>
    <atom:link href="https://ssp3nc3r.github.io/tags/stan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lost in the forest</title>
      <link>https://ssp3nc3r.github.io/post/lost-in-the-forest/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/lost-in-the-forest/</guid>
      <description>&lt;p&gt;In this post, I want to address why Bayesian modeling approaches, especially those implemented in Stan, should be considered as a valid alternative to common machine learning techniques in sports analytics. Specifically, I’ll focus on a well-established criterion for model evaluation: leave-one-out cross-validation (LOO-CV) and its use to calculate the expected log predictive density (ELPD). This scoring rule measures how well a model predicts unseen data. If you’d like a deeper explanation of ELPD and its interpretation in the context of this example, I’ll include one in an appendix at the end.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New online Stan coding course</title>
      <link>https://ssp3nc3r.github.io/post/new-online-stan-coding-course/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/new-online-stan-coding-course/</guid>
      <description>&lt;p&gt;Hey everyone! I’m excited to announce my new online course for learning&#xA;direct Stan coding for Bayesian analysis. Available now; enroll here:&#xA;&lt;a href=&#34;https://athlyticz.com/stan-i&#34; class=&#34;uri&#34;&gt;https://athlyticz.com/stan-i&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;span class=&#34;smallcaps&#34;&gt;— &lt;strong&gt;TL;DR&lt;/strong&gt; —&lt;/span&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Actual Stan coding, not a high-level interface&lt;/li&gt;&#xA;&lt;li&gt;At-your-own-pace videos: shows live coding while explaining&lt;/li&gt;&#xA;&lt;li&gt;Hosted RStudio session to practice alongside me&lt;/li&gt;&#xA;&lt;li&gt;Starts with fundamentals, builds to hierarchical models&lt;/li&gt;&#xA;&lt;li&gt;Emphasizes a Bayesian workflow&lt;/li&gt;&#xA;&lt;li&gt;Modeling applied to sports data&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;My goal is to &lt;strong&gt;make learning Stan as easy and fast as possible&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Speedy splines part two, derivative work</title>
      <link>https://ssp3nc3r.github.io/post/derivative-work-on-speedy-splines/</link>
      <pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/derivative-work-on-speedy-splines/</guid>
      <description>&lt;p&gt;In the last post, I showed how we can speed up computation for splines in Stan. This post is, ahem, derivative. Perhaps we have noisy data of position and time, and we want to estimate speed and acceleration. We can use b-splines and their derivatives for this.&lt;/p&gt;&#xA;&lt;p&gt;So let’s pick up where we left off, and add calculations in Stan to calculate the first and second derivatives of the spline in Stan. Much of the code below mirrors that of the previous post. There are multiple approaches to calculating derivatives of splines. We can take the derivative of the basis functions &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-rogers2001&#34;&gt;Rogers 2001, sec. 3.10&lt;/a&gt; B-Spline Curve Derivatives)&lt;/span&gt; or we can difference the coefficients &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-deboor2001&#34;&gt;Boor 2001&lt;/a&gt;, X. The Stable Evaluation of B-Splines and Splines)&lt;/span&gt;. In the Stan functions block below, I’ve added calculations for the first and second derivatives of the basis functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Speedy splines in Stan part one</title>
      <link>https://ssp3nc3r.github.io/post/speedy-splines-in-stan/</link>
      <pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/speedy-splines-in-stan/</guid>
      <description>&lt;p&gt;Milad Kharratzadeh provides a helpful &lt;a href=&#34;https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html&#34;&gt;case study&lt;/a&gt; on estimating splines in Stan. We can improve on his work with a few tricks to speed up the estimation process. Namely, if we decompose the spline matrix using QR decomposition, we speed up Stan’s fitting process by at least an order of magnitude.&lt;/p&gt;&#xA;&lt;p&gt;Here’s how we can alter the code to accommodate splines with a few tricks to speed things up:&lt;/p&gt;&#xA;&lt;pre class=&#34;stan&#34;&gt;&lt;code&gt;&#xA;functions {&#xA;  &#xA;  vector build_b_spline(vector t, array[] real ext_knots, int ind, int order) {&#xA;    &#xA;    vector[size(t)] b_spline;&#xA;    vector[size(t)] w1 = rep_vector(0, size(t));&#xA;    vector[size(t)] w2 = rep_vector(0, size(t));&#xA;    &#xA;    if (order == 1)&#xA;    &#xA;      for (i in 1:size(t)) &#xA;        b_spline[i] = (ext_knots[ind] &amp;lt;= t[i]) &amp;amp;&amp;amp; (t[i] &amp;lt; ext_knots[ind+1]); &#xA;    &#xA;    else {&#xA;    &#xA;      if (ext_knots[ind] != ext_knots[ind + order-1])&#xA;        w1 = (t - rep_vector(ext_knots[ind], size(t))) / &#xA;             (ext_knots[ind + order-1] - ext_knots[ind]);&#xA;      if (ext_knots[ind + 1] != ext_knots[ind + order])&#xA;        w2 = 1 - (t - rep_vector(ext_knots[ind + 1], size(t))) / &#xA;                 (ext_knots[ind + order] - ext_knots[ind + 1]);&#xA;                 &#xA;      b_spline = w1 .* build_b_spline(t, ext_knots, ind, order - 1) + &#xA;                 w2 .* build_b_spline(t, ext_knots, ind+1, order - 1);&#xA;    &#xA;    }&#xA;    &#xA;    return b_spline;&#xA;  &#xA;  }&#xA;  &#xA;}&#xA;&#xA;&#xA;data {&#xA;  &#xA;  int&amp;lt;lower=1&amp;gt; T;                 // number of times measured&#xA;  vector[T] t;                    // remove and replace with position&#xA;  vector[T] y;                    // the measurement at each time point t&#xA;  &#xA;  int&amp;lt;lower=1&amp;gt; K;                 // number of knots&#xA;  int&amp;lt;lower=1&amp;gt; degree;            // degree of the spline&#xA;  int&amp;lt;lower=0,upper=1&amp;gt; penalized; // whether to use prior for smoothing&#xA;  &#xA;}&#xA;&#xA;&#xA;transformed data {&#xA;  &#xA;  // knots at evenly-spaced quantiles of data&#xA;  array[K] real p;&#xA;  for(i in 1:K) p[i] = (i - 1.0) / (K-1.0);&#xA;  array[K] real k = quantile(t, p);&#xA;  &#xA;  // build the spline matrix B&#xA;  int n_basis = K + degree - 1; &#xA;  matrix[n_basis, T] B;&#xA;  &#xA;  array[2 * degree + K] real ext_knots =&#xA;  append_array(append_array(rep_array(k[1], degree), k), rep_array(k[K], degree));&#xA;  &#xA;  for (ind in 1:n_basis)&#xA;    B[ind,:] = to_row_vector(build_b_spline(t, (ext_knots), ind, degree + 1));&#xA;  &#xA;  B[K + degree - 1, T] = 1;&#xA;  &#xA;  // QR decomposition of B, thin and scale&#xA;  matrix[T, n_basis] Q_ast = qr_thin_Q(B&amp;#39;) * sqrt(T - 1);&#xA;  matrix[n_basis, n_basis] R_ast = qr_thin_R(B&amp;#39;) / sqrt(T - 1);&#xA;  matrix[n_basis, n_basis] R_ast_inverse = inverse(R_ast);&#xA;  &#xA;  // helper stuff&#xA;  vector[T] zeros_T = rep_vector(0, T);&#xA;  &#xA;}&#xA;&#xA;&#xA;parameters {&#xA;  &#xA;  vector[n_basis] theta_raw; // coefficients on Q_ast&#xA;  real&amp;lt;lower=0&amp;gt; sigma;       // scale of the variation&#xA;  real&amp;lt;lower=0&amp;gt; tau;         // penalization on wiggles&#xA;  &#xA;}&#xA;&#xA;&#xA;transformed parameters {&#xA;  &#xA;  vector[n_basis] theta;&#xA;  &#xA;  if(penalized) {&#xA;    theta[1] = theta_raw[1];&#xA;    for(i in 2:n_basis) theta[i] = theta[i-1] + theta_raw[i] * tau;&#xA;  } else {&#xA;    theta = theta_raw;&#xA;  }&#xA;  &#xA;}&#xA;&#xA;&#xA;model {&#xA;  &#xA;  theta_raw ~ normal(0, 1);&#xA;  tau ~ normal(0, 1);&#xA;  sigma ~ exponential(1);  &#xA;  y ~ normal_id_glm(Q_ast, zeros_T, theta, sigma);&#xA;&#xA;}&#xA;&#xA;generated quantities {&#xA;  vector[n_basis] beta;&#xA;  beta = R_ast_inverse * theta;&#xA;  vector[T] y_hat = B&amp;#39; * beta;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;We can compile the model like so,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pitch selection to maximize motion-in-depth variation</title>
      <link>https://ssp3nc3r.github.io/post/pitch-selection-to-maximize-motion-in-depth/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/pitch-selection-to-maximize-motion-in-depth/</guid>
      <description>&lt;p&gt;Those in baseball are well aware of the concept of platoon advantage: batters tend to have an advantage when facing pitchers of the opposite handedness. But knowledge of a platoon advantage may go beyond choice of relief pitchers on the mound to matchup with the upcoming lineup of power batters. It may inform, among other things, pitching strategy.&lt;/p&gt;&#xA;&lt;p&gt;Considering reasons behind the phenomenon, it may be explained by the greater relative variation in movement of the ball inside a batter’s &lt;strong&gt;plane of sight&lt;/strong&gt;, which I’ll define in a moment, while same-handed pitchers tend to keep the ball’s trajectory more aligned with that plane, making it harder to perceive lateral movement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating random numbers from custom distributions</title>
      <link>https://ssp3nc3r.github.io/post/generating-random-numbers-from-custom-distributions/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/generating-random-numbers-from-custom-distributions/</guid>
      <description>&lt;p&gt;In an earlier post, I explained how to code custom distributions for use in modeling using the programming language Stan. Expanding upon that post, here, I’ll demonstrate how we code a function to generate random values from those distributions.&lt;/p&gt;&#xA;&lt;p&gt;One direct approach just involves a bit of algebra. As in the earlier post, I’ll again use the three-parameter Weibull distribution. Generally, in the first step, we can set the CDF of the distribution equal to a random value from, say, a uniform distribution &lt;span class=&#34;math inline&#34;&gt;\(u \in [0, 1]\)&lt;/span&gt;, like so:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coding custom distribution functions in Stan</title>
      <link>https://ssp3nc3r.github.io/post/coding-custom-distribution-functions-in-stan/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/coding-custom-distribution-functions-in-stan/</guid>
      <description>&lt;p&gt;The probabilistic programming language called &lt;a href=&#34;https://mc-stan.org&#34;&gt;Stan&lt;/a&gt; is a powerful tools for modeling. It includes numerous distribution functions we can use to model. While it cannot include every conceivable distribution in its available functions, it does enable the next best thing: &lt;em&gt;we can code our own&lt;/em&gt;!&lt;/p&gt;&#xA;&lt;p&gt;The Stan library does not, for example, currently include the &lt;a href=&#34;https://en.wikipedia.org/wiki/Weibull_distribution#Related_distributions&#34;&gt;three-parameter Weibull distribution&lt;/a&gt;. In this tutorial, I’ll code its PDF and CDF to demonstrate coding custom distributions in Stan.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploratory modeling on how win uncertainty affects baseball game attendance</title>
      <link>https://ssp3nc3r.github.io/post/2020-01-03-exploratory-modeling-on-how-win-uncertainty-affects-game-attendance/</link>
      <pubDate>Fri, 03 Jan 2020 18:01:28 -0400</pubDate>
      <guid>https://ssp3nc3r.github.io/post/2020-01-03-exploratory-modeling-on-how-win-uncertainty-affects-game-attendance/</guid>
      <description>&lt;p&gt;We dread an empty ticket booth. The Dodgers’ average game attendance, for example, can be below capacity — they have seats to fill, despite having winning seasons.&lt;/p&gt;&#xA;&lt;p&gt;To draw more fans, consider the words of famed economist Simon Rotternberg, who said “uncertainty of outcome is necessary for consumers to pay admission to ball games.” While winning is important, it’s the not knowing that creates excitement. Have the Dodgers maximized winning with uncertainty of outcome? Let’s see.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dynamic, physics-informed systems in Bayesian models</title>
      <link>https://ssp3nc3r.github.io/post/dynamic-systems-in-bayesian-models/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/dynamic-systems-in-bayesian-models/</guid>
      <description>&lt;p&gt;By dynamic systems, I mean using differential equations to describe how data changes over time. Take running speed, for example. Several physics-based models of running speed have been developed, which I’ve previously discussed. The primary goal in those previous discussions involving sprint speed have been in estimating a maximum speed. But the underlying structure of these models estimate change in speed at time two from speed at time one: a differential equation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Estimating human limits of running speed</title>
      <link>https://ssp3nc3r.github.io/post/estimating-human-limits-to-running-speed/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/estimating-human-limits-to-running-speed/</guid>
      <description>&lt;link href=&#34;https://ssp3nc3r.github.io/post/estimating-human-limits-to-running-speed/index_files/tabwid/tabwid.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Prefontaine “finally got it through my head that the real purpose of running isn’t to win a race. It’s to test the limits of the human heart. And that he did. Nobody did it more often. Nobody did it better.”&lt;/p&gt;&#xA;&lt;p&gt;— Bill Bowerman.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;We’ve been recording progress towards those limits, whatever they are, for some time. World records have been collected for running distances, from 50 meters on an indoor track to marathons and beyond. These records also include single-age records. Just what may be the limits that “Pre” pushed to test in running, and how might those limits depend on our age?&lt;/p&gt;</description>
    </item>
    <item>
      <title>See the rising sea</title>
      <link>https://ssp3nc3r.github.io/post/see-the-rising-sea/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/see-the-rising-sea/</guid>
      <description>&lt;script src=&#34;https://ssp3nc3r.github.io/post/see-the-rising-sea/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&lt;p&gt;Responding to the global effects of climate change — whether by mitigation or adaptation — requires that we, as humans, collectively change how we live. In many ways, how we live is governed by what policies we, or whomever made those policies, decided. Perhaps an effective way in some societies to enact change for the common good is, sadly, for those in power — &lt;em&gt;e.g.&lt;/em&gt;, those wealthy — to internalize future effects. Thus, if someone demonstrates that climate change negatively affects those in power to change policies, change is more likely.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modeling forces in 100m Olympic sprint, a study in physics and probability</title>
      <link>https://ssp3nc3r.github.io/post/estimating-force-of-100m-olympic-sprint-with-physics/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/estimating-force-of-100m-olympic-sprint-with-physics/</guid>
      <description>&lt;link href=&#34;https://ssp3nc3r.github.io/post/estimating-force-of-100m-olympic-sprint-with-physics/index_files/tabwid/tabwid.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&#xA;&#xA;&lt;p&gt;Let’s practice expressing a probabilistic model aided by physics. Physics have been used, of course, to mathematically describe the forces involved in running short distances. To estimate sprint speed we can inform our models with basic anatomical information and physics. The mathematical physics of running speed depend on body weight, and stride length and rate. Let’s begin with those.&lt;/p&gt;&#xA;&lt;p&gt;Let’s start with physics equations to describe speed, and accelerating to maximum speed. We can express this by considering acceleration per stride, as explained in &lt;span class=&#34;citation&#34;&gt;Herman (&lt;a href=&#34;#ref-hermanPhysicsHumanBody2016&#34; role=&#34;doc-biblioref&#34;&gt;2016&lt;/a&gt;)&lt;/span&gt;. Imagine stepping into the starting blocks on a 100m sprint. On the first push with our legs, we accelerate to a speed &lt;span class=&#34;math inline&#34;&gt;\(v_1\)&lt;/span&gt; at the end of the stride from a force &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; moved by a distance &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt;. To accelerate, we must produce the required work &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt;, as force &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; times stride length &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; — all together, &lt;span class=&#34;math inline&#34;&gt;\(W = FL\)&lt;/span&gt; — further expressed by the kinetic energy in our body, &lt;span class=&#34;math inline&#34;&gt;\(\frac{1}{2}ma\)&lt;/span&gt;, or more specifically, &lt;span class=&#34;math inline&#34;&gt;\(\frac{1}{2}(m_{\text{b}} - 2m_{\text{leg}})v_1^2\)&lt;/span&gt;, with one leg in the air &lt;span class=&#34;math inline&#34;&gt;\(\frac{1}{2}m_{\text{leg}}v_1^2\)&lt;/span&gt;. After the first stride, then, we can express our speed or velocity as,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Estimating the marginal value of baseball events</title>
      <link>https://ssp3nc3r.github.io/post/estimating-the-marginal-value-of-baseball-events/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/estimating-the-marginal-value-of-baseball-events/</guid>
      <description>&lt;script src=&#34;https://ssp3nc3r.github.io/./rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&lt;p&gt;Teams score — or &lt;em&gt;don’t&lt;/em&gt; — event by event. Events change the state of the game. Solo home runs aside, whether a score results from any event depends upon prior events: &lt;em&gt;a batter’s double only “drives in a score” when an earlier batter made it on base.&lt;/em&gt; By the collection of events a player generates, or more accurately, by the change in expected runs to which they contribute, we can measure players offensive values.&lt;/p&gt;</description>
    </item>
    <item>
      <title>McElreath&#39;s Statistical Rethinking examples recoded into Stan</title>
      <link>https://ssp3nc3r.github.io/post/mcelreath-s-statistical-rethinking-examples-recoded-into-stan/</link>
      <pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/mcelreath-s-statistical-rethinking-examples-recoded-into-stan/</guid>
      <description>&lt;hr /&gt;&#xA;&lt;p&gt;McElreath’s &lt;em&gt;Statistical Rethinking&lt;/em&gt; is among the best books for learning Bayesian statistics (he has a second edition coming out too). As an exercise in pedagogy, I’ve recoded all his examples directly into Stan, a probabilistic programming language. Recoding examples from one programming language into another is a great way to practice learning that other language. Give it a try. I’ve made my recoded examples available &lt;a href=&#34;https://github.com/ssp3nc3r/rethinking&#34;&gt;here&lt;/a&gt; if you get stuck or want to compare methods of coding.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jointly modeling choice to swing with ball contact</title>
      <link>https://ssp3nc3r.github.io/post/jointly-modeling-choice-to-swing-with-ball-contact/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/jointly-modeling-choice-to-swing-with-ball-contact/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#modeling-batters-choices-to-swing-and-abilities-to-contact-the-ball&#34;&gt;Modeling batters’ choices to swing and abilities to contact the ball&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#variables-informing-the-probability-of-swinging-the-selection-submodel&#34;&gt;Variables informing the probability of swinging (the selection submodel)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#variables-informing-probability-of-contacting-the-ball-the-outcome-submodel&#34;&gt;Variables informing probability of contacting the ball (the outcome submodel)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#initial-joint-model&#34;&gt;Initial joint model&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&lt;div id=&#34;modeling-batters-choices-to-swing-and-abilities-to-contact-the-ball&#34; class=&#34;section level1&#34;&gt;&#xA;&lt;h1&gt;Modeling batters’ choices to swing and abilities to contact the ball&lt;/h1&gt;&#xA;&lt;p&gt;Models for decisions to swing and ball contact are more nuanced than a model for called pitches (see &lt;em&gt;Modeling Umpire Calls&lt;/em&gt;). Batters’ abilities to contact the ball at a given pitch location are presumably not independent of their decisions to swing. Common approaches for jointly modeling selections (choices to swing) that influence outcomes (ball contact) are called &lt;em&gt;sample selection&lt;/em&gt; models &lt;span class=&#34;citation&#34;&gt;(Hasselt &lt;a href=&#34;#ref-vanHasselt:2011jd&#34;&gt;2011&lt;/a&gt;)&lt;/span&gt;, and can generally be written as,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stan Is Not an Acronym: Bayesian Solutions to Sabermetric Shortcomings</title>
      <link>https://ssp3nc3r.github.io/post/stan-is-not-an-acronym-bayesian-solutions-to-sabermetric-shortcomings/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/stan-is-not-an-acronym-bayesian-solutions-to-sabermetric-shortcomings/</guid>
      <description>&lt;script src=&#34;https://ssp3nc3r.github.io/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&lt;p&gt;Here is our description of our presentation at &lt;a href=&#34;%22http://www.brooksbaseball.net/ss18/sunday.html%22&#34;&gt;Saberseminar 2018&lt;/a&gt;: “A common definition of sabermetrics is the application of statistics to baseball. However, despite clear progress over the past few decades, we argue that sabermetrics has largely ignored the most important statistical principle to baseball: generative modeling. In this talk we discuss several conceptual errors with sabermetrics that preclude optimal decision making. Each of these problems can be overcome using a principled Bayesian approach to inference, which we demonstrate using the Stan statistical software.”&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modeling Umpire Calls</title>
      <link>https://ssp3nc3r.github.io/post/modeling-umpire-calls/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/modeling-umpire-calls/</guid>
      <description>&lt;script src=&#34;https://ssp3nc3r.github.io/./rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&lt;div id=&#34;TOC&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#batting-and-pitching-data-from-major-league-baseball-advance-media&#34;&gt;Batting and pitching data from Major League Baseball Advance Media&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#modeling-called-strike-probabilities&#34;&gt;Modeling called strike probabilities&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#previous-work&#34;&gt;Previous work&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#general-model-description&#34;&gt;General model description&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#called-strike-probabilities-modeled-in-stan&#34;&gt;Called strike probabilities modeled in Stan&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#model-diagnostics&#34;&gt;Model diagnostics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#called-strike-probability-predictions-from-the-modeled-posterior&#34;&gt;Called strike probability predictions from the modeled posterior&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#bibliography&#34;&gt;Bibliography&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;&#xA;&lt;h1&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;The goal of baseball pitchers — when contributing to team defense — is to put out batters. Two ways are (mostly) within the pitchers’ control. They may earn a &lt;em&gt;called strike&lt;/em&gt; or a &lt;em&gt;swinging strike&lt;/em&gt;. The “definition of a good pitcher”, explains Sandy Koufax, is a “guy that throws what he intends to throw.” &lt;span class=&#34;citation&#34;&gt;(Morrison, Pavlidis, and Long &lt;a href=&#34;#ref-Morrison:2018vd&#34;&gt;2018&lt;/a&gt;)&lt;/span&gt; said that quantifying pitchers’ abilities to “throw the ball where he intends to”, called pitching command, is “one of the most challenging aspects of pitching to quantify.” As data of where the pitcher “intends to” throw are not publicly available, we agree. Various approaches have been tried. Baseball Info Solutions has measured catcher mitt starting locations for each pitch &lt;span class=&#34;citation&#34;&gt;(Dewan &lt;a href=&#34;#ref-Dewan:2011uj&#34;&gt;2011&lt;/a&gt;)&lt;/span&gt;, to which ball catch locations are compared. But pitchers are not necessarily aiming at the mitt: consider catcher mitt location, for example, when a ball curves through the strike zone before diving into the dirt.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run Expectancy Distributions of MLB Game States</title>
      <link>https://ssp3nc3r.github.io/post/2017-12-03-run-expectancy-distributions/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/2017-12-03-run-expectancy-distributions/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#team-winsa-chain-of-player-events&#34;&gt;Team wins—a chain of player events&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#data-and-sources-for-estimating-run-expectancies&#34;&gt;Data and sources for estimating run expectancies&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#calculate-runs-scored-after-every-game-state-of-a-half-inning&#34;&gt;Calculate runs scored after every game state of a half inning&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#estimating-run-expectancy&#34;&gt;Estimating run expectancy&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#preserving-and-understanding-uncertainty-of-our-estimates&#34;&gt;Preserving and understanding uncertainty of our estimates&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#in-half-innings-more-runs-occur-less-frequently&#34;&gt;In half innings, more runs occur less frequently&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#building-a-bayesian-run-expectancy-model&#34;&gt;Building a bayesian run expectancy model&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#model-summary&#34;&gt;Model summary&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#the-median-run-expectancy-matrix&#34;&gt;The median run expectancy matrix&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div id=&#34;team-winsa-chain-of-player-events&#34; class=&#34;section level1&#34;&gt;&#xA;&lt;h1&gt;Team wins—a chain of player events&lt;/h1&gt;&#xA;&lt;p&gt;The performance of a baseball player includes numerous on-field (and off-field) activities, roughly divided into skills of offensive (&lt;em&gt;e.g.&lt;/em&gt;, batting, baserunning) and defensive (&lt;em&gt;e.g.&lt;/em&gt;, pitching, fielding). The value of each skill depends upon its contribution to team wins, and wins are the difference in team score (runs). Breaking this down further, runs depend on advancing each half inning of baseball from one “state” to another. By state, we mean the base locations of any runners and the number of outs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trading Stanton: a modeling sketch</title>
      <link>https://ssp3nc3r.github.io/post/trading-stanton-a-modeling-sketch/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/trading-stanton-a-modeling-sketch/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#forecast-of-giancarlo-stantons-expected-surplus-value&#34;&gt;Forecast of Giancarlo Stanton’s Expected Surplus Value&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#estimate-player-past-performance-as-wins-over-replacement&#34;&gt;Estimate player past performance as Wins Over Replacement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#forecasting-war-with-a-hierarchical-model-in-stan&#34;&gt;Forecasting WAR with a hierarchical model in Stan&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#dollars-per-war-on-the-free-agent-market&#34;&gt;Dollars Per WAR on the Free-Agent Market&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#unadjusted-surplus-value&#34;&gt;Unadjusted surplus value&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#appendix-stan-model-for-forcasting-war&#34;&gt;Appendix: Stan Model for Forcasting WAR&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div id=&#34;forecast-of-giancarlo-stantons-expected-surplus-value&#34; class=&#34;section level1&#34;&gt;&#xA;&lt;h1&gt;Forecast of Giancarlo Stanton’s Expected Surplus Value&lt;/h1&gt;&#xA;&lt;div id=&#34;summary&#34; class=&#34;section level2&#34;&gt;&#xA;&lt;h2&gt;Summary&lt;/h2&gt;&#xA;&lt;p&gt;In most analyses, I would normally lead with the conclusion—here, surplus value. But, as the perceived goals of analysis are evaluating, well, the analysis, I’ll start with my methods. First, I estimate Stanton’s performance in terms of WAR, tying Stanton’s performance to team wins. Then I connect his wins over replacement to dollars. Finally, I subtract out the contract cost and report surplus as net present value.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contours of batter comparisons: a trick up the sleeve</title>
      <link>https://ssp3nc3r.github.io/post/2017-08-04-contours-of-batter-comparisons/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/2017-08-04-contours-of-batter-comparisons/</guid>
      <description>&lt;p&gt;Through the eyes of writer Roger Kahn, we’ve witnessed major league pitchers working to fool batters for ages. Regarding one Brooklyn Dodgers pitcher,&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“Dazzy Vance in his prime had a different trick,” [Kahn’s] father said. “For seven years he was the best strikeout pitcher in the league. Vance wore a long undershirt and he took a scissors and cut slits in the right sleeve. It ran clear down to the wrist. When Vance pitched, the long sleeve flapped. It was a white sleeve and the hitters had one heck of a time seeing that white baseball coming out of that white sleeve. Before they knew it, the fastball was in the catcher’s mitt. Strike three” (Kahn, 1997)[1].&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
